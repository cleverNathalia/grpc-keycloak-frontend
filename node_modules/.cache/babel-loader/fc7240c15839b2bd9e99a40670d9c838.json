{"remainingRequest":"/home/admin/Documents/client-part2/node_modules/babel-loader/lib/index.js!/home/admin/Documents/client-part2/src/hello/src/proto/hello_pb.js","dependencies":[{"path":"/home/admin/Documents/client-part2/src/hello/src/proto/hello_pb.js","mtime":1581411996665},{"path":"/home/admin/Documents/client-part2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/admin/Documents/client-part2/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/admin/Documents/client-part2/src/hello/src/proto/hello_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Person","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","HelloRequest","HelloReply","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","name","address","phone","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setId","setName","setAddress","setPhone","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","length","writeString","getName","getAddress","getPhone","setProto3StringField","role","setRole","getRole","people","getPeople","readMessage","setPeople","writeMessage","getWrapperField","setWrapperField","clearPeople","hasPeople","getField","object","extend","exports"],"mappings":"AAAA;;;;;;;AAOA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,IAAI,CAACG,YAAL,CAAkB,kBAAlB,EAAsC,IAAtC,EAA4CF,MAA5C;AACAD,IAAI,CAACG,YAAL,CAAkB,oBAAlB,EAAwC,IAAxC,EAA8CF,MAA9C;AACAD,IAAI,CAACG,YAAL,CAAkB,cAAlB,EAAkC,IAAlC,EAAwCF,MAAxC;AACA;;;;;;;;;;;AAUAG,KAAK,CAACC,MAAN,GAAe,UAASC,QAAT,EAAmB;AAChCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACC,MAApB,EAA4BP,IAAI,CAACS,OAAjC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,EAAAA,KAAK,CAACC,MAAN,CAAaO,WAAb,GAA2B,cAA3B;AACD;AACD;;;;;;;;;;;;AAUAR,KAAK,CAACS,YAAN,GAAqB,UAASP,QAAT,EAAmB;AACtCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACS,YAApB,EAAkCf,IAAI,CAACS,OAAvC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,EAAAA,KAAK,CAACS,YAAN,CAAmBD,WAAnB,GAAiC,oBAAjC;AACD;AACD;;;;;;;;;;;;AAUAR,KAAK,CAACU,UAAN,GAAmB,UAASR,QAAT,EAAmB;AACpCR,EAAAA,IAAI,CAACS,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAN,IAAI,CAACS,QAAL,CAAcL,KAAK,CAACU,UAApB,EAAgChB,IAAI,CAACS,OAArC;;AACA,IAAIP,IAAI,CAACU,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAP,EAAAA,KAAK,CAACU,UAAN,CAAiBF,WAAjB,GAA+B,kBAA/B;AACD;;AAID,IAAId,IAAI,CAACS,OAAL,CAAaQ,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAX,EAAAA,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuBC,QAAvB,GAAkC,UAASC,mBAAT,EAA8B;AAC9D,WAAOd,KAAK,CAACC,MAAN,CAAaY,QAAb,CAAsBC,mBAAtB,EAA2C,IAA3C,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAd,EAAAA,KAAK,CAACC,MAAN,CAAaY,QAAb,GAAwB,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACrD,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,EAAE,EAAEzB,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADO;AAEXK,MAAAA,IAAI,EAAE3B,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFK;AAGXM,MAAAA,OAAO,EAAE5B,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHE;AAIXO,MAAAA,KAAK,EAAE7B,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AAJI,KAAb;;AAOA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAZD;AAaC;AAGD;;;;;;;AAKAlB,KAAK,CAACC,MAAN,CAAawB,iBAAb,GAAiC,UAASC,KAAT,EAAgB;AAC/C,MAAIC,MAAM,GAAG,IAAIjC,IAAI,CAACkC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAIhB,KAAK,CAACC,MAAV,EAAV;AACA,SAAOD,KAAK,CAACC,MAAN,CAAa4B,2BAAb,CAAyCb,GAAzC,EAA8CW,MAA9C,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA3B,KAAK,CAACC,MAAN,CAAa4B,2BAAb,GAA2C,UAASb,GAAT,EAAcW,MAAd,EAAsB;AAC/D,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAnB,QAAAA,GAAG,CAACoB,KAAJ,CAAUF,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAnB,QAAAA,GAAG,CAACqB,OAAJ,CAAYH,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAnB,QAAAA,GAAG,CAACsB,UAAJ,CAAeJ,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAnB,QAAAA,GAAG,CAACuB,QAAJ,CAAaL,KAAb;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AAnBF;AAqBD;;AACD,SAAOxB,GAAP;AACD,CA7BD;AAgCA;;;;;;AAIAhB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuB6B,eAAvB,GAAyC,YAAW;AAClD,MAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAT,EAAb;AACA3C,EAAAA,KAAK,CAACC,MAAN,CAAa2C,uBAAb,CAAqC,IAArC,EAA2CF,MAA3C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA7C,KAAK,CAACC,MAAN,CAAa2C,uBAAb,GAAuC,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC/D,MAAIzB,CAAC,GAAG8B,SAAR;AACA9B,EAAAA,CAAC,GAAG6B,OAAO,CAACE,KAAR,EAAJ;;AACA,MAAI/B,CAAC,CAACgC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEjC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG6B,OAAO,CAACK,OAAR,EAAJ;;AACA,MAAIlC,CAAC,CAACgC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEjC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG6B,OAAO,CAACM,UAAR,EAAJ;;AACA,MAAInC,CAAC,CAACgC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEjC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG6B,OAAO,CAACO,QAAR,EAAJ;;AACA,MAAIpC,CAAC,CAACgC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEjC,CAFF;AAID;AACF,CA9BD;AAiCA;;;;;;AAIAjB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuBoC,KAAvB,GAA+B,YAAW;AACxC;AAAO;AAAuBtD,IAAAA,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACApB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuBwB,KAAvB,GAA+B,UAASF,KAAT,EAAgB;AAC7CxC,EAAAA,IAAI,CAACS,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C;AACD,CAFD;AAKA;;;;;;AAIAlC,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuBuC,OAAvB,GAAiC,YAAW;AAC1C;AAAO;AAAuBzD,IAAAA,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACApB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuByB,OAAvB,GAAiC,UAASH,KAAT,EAAgB;AAC/CxC,EAAAA,IAAI,CAACS,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C;AACD,CAFD;AAKA;;;;;;AAIAlC,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuBwC,UAAvB,GAAoC,YAAW;AAC7C;AAAO;AAAuB1D,IAAAA,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACApB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuB0B,UAAvB,GAAoC,UAASJ,KAAT,EAAgB;AAClDxC,EAAAA,IAAI,CAACS,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C;AACD,CAFD;AAKA;;;;;;AAIAlC,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuByC,QAAvB,GAAkC,YAAW;AAC3C;AAAO;AAAuB3D,IAAAA,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACApB,KAAK,CAACC,MAAN,CAAaW,SAAb,CAAuB2B,QAAvB,GAAkC,UAASL,KAAT,EAAgB;AAChDxC,EAAAA,IAAI,CAACS,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C;AACD,CAFD;;AAQA,IAAIxC,IAAI,CAACS,OAAL,CAAaQ,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAX,EAAAA,KAAK,CAACS,YAAN,CAAmBG,SAAnB,CAA6BC,QAA7B,GAAwC,UAASC,mBAAT,EAA8B;AACpE,WAAOd,KAAK,CAACS,YAAN,CAAmBI,QAAnB,CAA4BC,mBAA5B,EAAiD,IAAjD,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAd,EAAAA,KAAK,CAACS,YAAN,CAAmBI,QAAnB,GAA8B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3D,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXqC,MAAAA,IAAI,EAAE7D,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADK,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKAlB,KAAK,CAACS,YAAN,CAAmBgB,iBAAnB,GAAuC,UAASC,KAAT,EAAgB;AACrD,MAAIC,MAAM,GAAG,IAAIjC,IAAI,CAACkC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAIhB,KAAK,CAACS,YAAV,EAAV;AACA,SAAOT,KAAK,CAACS,YAAN,CAAmBoB,2BAAnB,CAA+Cb,GAA/C,EAAoDW,MAApD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA3B,KAAK,CAACS,YAAN,CAAmBoB,2BAAnB,GAAiD,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACrE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAnB,QAAAA,GAAG,CAACwC,OAAJ,CAAYtB,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AAPF;AASD;;AACD,SAAOxB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAhB,KAAK,CAACS,YAAN,CAAmBG,SAAnB,CAA6B6B,eAA7B,GAA+C,YAAW;AACxD,MAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAT,EAAb;AACA3C,EAAAA,KAAK,CAACS,YAAN,CAAmBmC,uBAAnB,CAA2C,IAA3C,EAAiDF,MAAjD;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA7C,KAAK,CAACS,YAAN,CAAmBmC,uBAAnB,GAA6C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrE,MAAIzB,CAAC,GAAG8B,SAAR;AACA9B,EAAAA,CAAC,GAAG6B,OAAO,CAACW,OAAR,EAAJ;;AACA,MAAIxC,CAAC,CAACgC,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEjC,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAjB,KAAK,CAACS,YAAN,CAAmBG,SAAnB,CAA6B6C,OAA7B,GAAuC,YAAW;AAChD;AAAO;AAAuB/D,IAAAA,IAAI,CAACS,OAAL,CAAaiB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;AACApB,KAAK,CAACS,YAAN,CAAmBG,SAAnB,CAA6B4C,OAA7B,GAAuC,UAAStB,KAAT,EAAgB;AACrDxC,EAAAA,IAAI,CAACS,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C;AACD,CAFD;;AAQA,IAAIxC,IAAI,CAACS,OAAL,CAAaQ,kBAAjB,EAAqC;AACrC;;;;;;;;;;AAUAX,EAAAA,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,mBAAT,EAA8B;AAClE,WAAOd,KAAK,CAACU,UAAN,CAAiBG,QAAjB,CAA0BC,mBAA1B,EAA+C,IAA/C,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAd,EAAAA,KAAK,CAACU,UAAN,CAAiBG,QAAjB,GAA4B,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzD,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXwC,MAAAA,MAAM,EAAE,CAACzC,CAAC,GAAGD,GAAG,CAAC2C,SAAJ,EAAL,KAAyB3D,KAAK,CAACC,MAAN,CAAaY,QAAb,CAAsBE,eAAtB,EAAuCE,CAAvC;AADtB,KAAb;;AAIA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACM,oBAAJ,GAA2BR,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKAlB,KAAK,CAACU,UAAN,CAAiBe,iBAAjB,GAAqC,UAASC,KAAT,EAAgB;AACnD,MAAIC,MAAM,GAAG,IAAIjC,IAAI,CAACkC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIV,GAAG,GAAG,IAAIhB,KAAK,CAACU,UAAV,EAAV;AACA,SAAOV,KAAK,CAACU,UAAN,CAAiBmB,2BAAjB,CAA6Cb,GAA7C,EAAkDW,MAAlD,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA3B,KAAK,CAACU,UAAN,CAAiBmB,2BAAjB,GAA+C,UAASb,GAAT,EAAcW,MAAd,EAAsB;AACnE,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAIlC,KAAK,CAACC,MAAV,EAAZ;AACA0B,QAAAA,MAAM,CAACiC,WAAP,CAAmB1B,KAAnB,EAAyBlC,KAAK,CAACC,MAAN,CAAa4B,2BAAtC;AACAb,QAAAA,GAAG,CAAC6C,SAAJ,CAAc3B,KAAd;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AARF;AAUD;;AACD,SAAOxB,GAAP;AACD,CAlBD;AAqBA;;;;;;AAIAhB,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2B6B,eAA3B,GAA6C,YAAW;AACtD,MAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAT,EAAb;AACA3C,EAAAA,KAAK,CAACU,UAAN,CAAiBkC,uBAAjB,CAAyC,IAAzC,EAA+CF,MAA/C;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA7C,KAAK,CAACU,UAAN,CAAiBkC,uBAAjB,GAA2C,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnE,MAAIzB,CAAC,GAAG8B,SAAR;AACA9B,EAAAA,CAAC,GAAG6B,OAAO,CAACa,SAAR,EAAJ;;AACA,MAAI1C,CAAC,IAAI,IAAT,EAAe;AACbyB,IAAAA,MAAM,CAACoB,YAAP,CACE,CADF,EAEE7C,CAFF,EAGEjB,KAAK,CAACC,MAAN,CAAa2C,uBAHf;AAKD;AACF,CAVD;AAaA;;;;;;AAIA5C,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2B+C,SAA3B,GAAuC,YAAW;AAChD;AAAO;AACLjE,IAAAA,IAAI,CAACS,OAAL,CAAa4D,eAAb,CAA6B,IAA7B,EAAmC/D,KAAK,CAACC,MAAzC,EAAiD,CAAjD;AADF;AAED,CAHD;AAMA;;;AACAD,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2BiD,SAA3B,GAAuC,UAAS3B,KAAT,EAAgB;AACrDxC,EAAAA,IAAI,CAACS,OAAL,CAAa6D,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsC9B,KAAtC;AACD,CAFD;AAKA;;;;;AAGAlC,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2BqD,WAA3B,GAAyC,YAAW;AAClD,OAAKJ,SAAL,CAAed,SAAf;AACD,CAFD;AAKA;;;;;;AAIA/C,KAAK,CAACU,UAAN,CAAiBE,SAAjB,CAA2BsD,SAA3B,GAAuC,YAAW;AAChD,SAAOxE,IAAI,CAACS,OAAL,CAAagE,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAKAvE,IAAI,CAACwE,MAAL,CAAYC,MAAZ,CAAmBC,OAAnB,EAA4BtE,KAA5B","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.HelloReply', null, global);\ngoog.exportSymbol('proto.HelloRequest', null, global);\ngoog.exportSymbol('proto.Person', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Person = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Person, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Person.displayName = 'proto.Person';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.HelloRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.HelloRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HelloRequest.displayName = 'proto.HelloRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.HelloReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.HelloReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.HelloReply.displayName = 'proto.HelloReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Person.prototype.toObject = function(opt_includeInstance) {\n  return proto.Person.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Person} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Person.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    phone: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Person}\n */\nproto.Person.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Person;\n  return proto.Person.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Person} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Person}\n */\nproto.Person.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPhone(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Person.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Person.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Person} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Person.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPhone();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Person.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Person.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Person.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Person.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string address = 3;\n * @return {string}\n */\nproto.Person.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Person.prototype.setAddress = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string phone = 4;\n * @return {string}\n */\nproto.Person.prototype.getPhone = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Person.prototype.setPhone = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.HelloRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.HelloRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.HelloRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HelloRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HelloRequest}\n */\nproto.HelloRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HelloRequest;\n  return proto.HelloRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HelloRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HelloRequest}\n */\nproto.HelloRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.HelloRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.HelloRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HelloRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HelloRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.HelloRequest.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.HelloRequest.prototype.setRole = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.HelloReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.HelloReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.HelloReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HelloReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    people: (f = msg.getPeople()) && proto.Person.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.HelloReply}\n */\nproto.HelloReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.HelloReply;\n  return proto.HelloReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.HelloReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.HelloReply}\n */\nproto.HelloReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Person;\n      reader.readMessage(value,proto.Person.deserializeBinaryFromReader);\n      msg.setPeople(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.HelloReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.HelloReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.HelloReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.HelloReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeople();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.Person.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Person people = 1;\n * @return {?proto.Person}\n */\nproto.HelloReply.prototype.getPeople = function() {\n  return /** @type{?proto.Person} */ (\n    jspb.Message.getWrapperField(this, proto.Person, 1));\n};\n\n\n/** @param {?proto.Person|undefined} value */\nproto.HelloReply.prototype.setPeople = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n */\nproto.HelloReply.prototype.clearPeople = function() {\n  this.setPeople(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.HelloReply.prototype.hasPeople = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto);\n"]}]}